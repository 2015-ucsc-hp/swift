Replace server.py and backend.py in ../ if you wish to use mariaDB.
Currently you must update backend.py to have the IP address of your mariaDB
or MaxScale load balancer. This will be updated to pull from the metadata
configuration file.

===================================================================
The general steps to installing mariaDB on Ubuntu 12.04 and 14.04: 
===================================================================
Run these commands on the node you are configuring:

   sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db
   sudo add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.5/ubuntu precise main'
   sudo apt-get update
   sudo apt-get install mariadb-galera-server-5.5 -y
   sudo apt-get install rsync python-pip libmariadbclient-dev -y
   sudo pip install MySQL-python

At this point a file /etc/mysql/conf.d/cluster.cnf must now be made or edited
with the following lines:

   [mysqld]
   binlog_format=ROW
   default-storage-engine=innodb
   innodb_autoinc_lock_mode=2
   query_cache_type=0
   query_cache_size=0
   bind-address=0.0.0.0

   # Galera Provider Configuration
   wsrep_provider=/usr/lib/galera/libgalera_smm.so
   #wsrep_provider_options="gcache.size=32G"

   # Galera Cluster Configuration
   wsrep_cluster_name="my_db_cluster"
   wsrep_cluster_address="gcomm://INSERTNODEIPS"

   # Galera Synchronization Congifuration
   wsrep_sst_method=rsync
   #wsrep_sst_auth=user:pass

   # Galera Node Configuration
   wsrep_node_address="INSERTNODEIP"
   wsrep_node_name="INSERTNODENAME"

Where you replace INSERTNODEIPS with a comma seperated list of node IPs 
that is in order of importance with the root node first.
Replace INSERTNODEIP with the IP of the node you are currently configuring.
Replace INSERTNODENAME with a name you decide to call the node you are 
currently configuring

Then run the following commands to stop the mysql service.

   sudo service mysql stop
   sudo killall mysqld

The configuration steps above must be repeated for an odd number of nodes
>=3. Once they are all configured up to this point you can continue.

If you recall the root node is the one listed first in cluster.cnf's variable
"wsrep_cluster_address".
You will now "bootstrap" that root node by running this command on it:

   sudo service mysql start --wsrep-new-cluster
   
Then start mariaDB on rest of nodes with the command:

   sudo service mysql start
   
At this point any change to a mariaDB database on one node should propogate to
the other nodes.

TODO: insert debugging info and known common mistakes such as failure
      to start mysql service due to permission errors, mariadb not
      asking to set root password at install, or he cluster nodes arent
      connencting to each other.

TODO: insert explanation of how to check that the cluster is functioning
      by checking wsrep_size or inserting a database to be replicated.

====================================================================
What are MariaDB/Galera/MaxScale/all the other packages we install?
====================================================================
MariaDB is a drop-in replacement of MySQL. It is a fork of MySQL that
is "free" under the GPL v2 license and its goal is to remain compatible 
and equivalent with MySQL features.

MariaDB Galera Server is a version of mariaDB that has integrated the 
multi-master replication/high availability software Galera. Galera 
allows mariaDB to operate as a cluster of multiple servers hosting the 
same database. A client can read the database from any node in the 
cluster. When a client makes a write to any node in the cluster it is 
replicated to all nodes in the cluster. This replication functionality 
allows the number of clients reading the database to scale by simply adding
more cluster nodes. It also ensures that if any node fails, the database 
is already replicated on the rest of the cluster. However, since a write
sent to any node is immediately replicated to all nodes, writes do not
truly scale as more nodes are added.

The load balancer, MaxScale, must be installed in order to truly scale 
the reads sent to mariaDB. The code in backend.py connects to the single
MaxScale server's IP and sends all queries to it. MaxScale then 
distributes the queries among all the mariaDB nodes in order to balance 
their read load.

As a note the package "libmariadbclient-dev" was installed to prevent an
error encountered when installing the python mysql driver with the command
"sudo pip install MySQL-python". MySQL-python is the library imported by
backend.py inorder to connect and send queries to mariaDB.

===========================================
The general steps to installing MaxScale:
===========================================
As a note, Maxscale must be installed on a 64 bit OS.
